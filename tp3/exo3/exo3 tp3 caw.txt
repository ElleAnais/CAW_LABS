exo3 tp3 caw 



**Exercice 3 :**

### Solution :

```javascript
// ReadFile.js

const fs = require('fs');

// Vérifier si le nom du fichier est passé en tant qu'argument
if (process.argv.length < 3) {
  console.error('Usage: node ReadFile.js <filename>');
  process.exit(1); // Arrêter le script avec un code d'erreur
}

// Récupérer le nom du fichier à partir des arguments de la ligne de commande
const fileName = process.argv[2];

// Lire le contenu du fichier de manière asynchrone
fs.readFile(fileName, 'utf8', (err, data) => {
  if (err) {
    console.error(`Error reading file: ${err.message}`);
    process.exit(1); // Arrêter le script avec un code d'erreur
  }

  // Afficher le contenu du fichier
  console.log('File Contents:');
  console.log(data);
});
```

### Explication du code :

1. **Importation du module `fs` :**
   - Le module `fs` (File System) est requis pour effectuer des opérations de lecture de fichiers.

   ```javascript
   const fs = require('fs');
   ```

2. **Vérification des arguments de la ligne de commande :**
   - Le script vérifie si le nom du fichier est passé comme argument lors de l'exécution. Si non, il affiche un message d'erreur et termine le script.

   ```javascript
   if (process.argv.length < 3) {
     console.error('Usage: node ReadFile.js <filename>');
     process.exit(1);
   }
   ```

3. **Récupération du nom du fichier :**
   - Le nom du fichier est extrait des arguments de la ligne de commande.

   ```javascript
   const fileName = process.argv[2];
   ```

4. **Lecture asynchrone du fichier :**
   - La fonction `fs.readFile` est utilisée pour lire le contenu du fichier de manière asynchrone.

   ```javascript
   fs.readFile(fileName, 'utf8', (err, data) => {
     // ...
   });
   ```

5. **Gestion des erreurs :**
   - Si une erreur survient lors de la lecture du fichier, le script affiche un message d'erreur et se termine.

   ```javascript
   if (err) {
     console.error(`Error reading file: ${err.message}`);
     process.exit(1);
   }
   ```

6. **Affichage du contenu du fichier :**
   - Si la lecture du fichier est réussie, le script affiche le contenu du fichier dans la console.

   ```javascript
   console.log('File Contents:');
   console.log(data);
   ```

### Exécution du script :

Pour exécuter le script `ReadFile.js` avec un fichier donné, ouvrez votre terminal, naviguez jusqu'au répertoire contenant le script, puis utilisez la commande suivante :

```bash
node ReadFile.js nom_du_fichier.txt
```

Assurez-vous de remplacer `nom_du_fichier.txt` par le chemin vers le fichier que vous souhaitez lire.